# jemdoc: menu{MENU}{notes/hypertree.html} nofooter
= hypertree
\n

= Tree Class Documentation
The Tree class provides methods for managing and manipulating phylogenetic trees, leveraging the treeswift package for tree handling and embedding into geometric spaces. This class includes functionality for tree distance calculation, embedding in Euclidean and hyperbolic geometries, as well as logging operations and visualization.

The Tree class supports two modes of initialization:

. From a file path (to load a tree).
. From an existing treeswift.Tree object with a custom name.

== Usage
The Tree class can be initialized with either a file path or a treeswift.Tree object, along with an optional parameter to enable logging.

%% print 'Interactive Python code.' %%

\+ >>> print 'Interactive Python code.' \+

~~~
++ >>> print 'Interactive Python code.' ++
~~~

>>> print 'Interactive Python code.'

from your\_package import tree_collections

# Example 1: Initialize from a file path
tree = tree_collections.Tree('path\/to\/treefile.nwk')

# Example 2: Initialize with a name and treeswift.Tree object
import treeswift as ts

t = ts.read\_tree\_newick('path\/to\/treefile.nwk')
tree = tree\_collections.Tree('Tree\_Name', t, enable\_logging=True)
